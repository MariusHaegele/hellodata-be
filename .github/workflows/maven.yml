# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven
on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:

  build:
    runs-on: ubuntu-latest
    environment:
      name: packages
    permissions: write-all
    #    permissions:
    #      contents: read+
    #      packages: write

    env:
      GITHUB_TOKEN: ${{ secrets.CUST_GITHUB_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      GIT_AUTH_TOKEN: ${{ secrets.CUST_GITHUB_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    #- name: Build with Maven
    #  run: mvn -B package --file pom.xml

    - name: login to ghcr.io
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    #- name: Login to Container Registry
    #  run: echo " ${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u kanton-bern --password-stdin

    - name: Publish Packages and Docker Images
      run: mvn --batch-mode deploy -Pdocker -DskipTests

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6